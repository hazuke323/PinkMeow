{"version":3,"sources":["file:///F:/oldCode/PinkMCat/assets/src/Tools/List.ts"],"names":["Node","Component","Enum","tween","_decorator","EventHandler","ScrollView","Prefab","Layout","Vec2","Size","NodePool","isValid","instantiate","Vec3","Widget","UITransform","CCFloat","CCBoolean","CCInteger","EventTouch","SystemEventType","ViewGroup","DEV","Log","ListItem","ccclass","property","disallowMultiple","menu","executionOrder","requireComponent","TemplateType","SlideType","SelectedType","_tempVec2","_tempVec2_1","List","type","tooltip","visible","templateType","NODE","PREFAB","range","slide","_slideMode","PAGE","val","slideMode","NORMAL","cyclic","virtual","lackCenter","lackSlide","selectedMode","NONE","SINGLE","serializable","_selectedId","_lastSelectedId","multSelected","_forceUpdate","_align","_horizontalDir","_verticalDir","_startAxis","_alignCalcType","content","_contentUt","firstListId","displayItemNum","_updateDone","_updateCounter","_actualNumItems","_cyclicNum","_cyclicPos1","_cyclicPos2","_inited","_scrollView","_layout","_resizeMode","_topGap","_rightGap","_bottomGap","_leftGap","_columnGap","_lineGap","_colLineNum","_lastDisplayData","displayData","_pool","_itemTmp","_itemTmpUt","_needUpdateWidget","_itemSize","_sizeType","_customSize","frameCount","_aniDelRuning","_aniDelCB","_aniDelItem","_aniDelBeforePos","_aniDelBeforeScale","viewTop","viewRight","viewBottom","viewLeft","_doneAfterUpdate","elasticTop","elasticRight","elasticBottom","elasticLeft","scrollToListId","adhering","_adheringBarrier","nearestListId","curPageNum","_beganPos","_scrollPos","_curScrollIsTouch","_scrollToListId","_scrollToEndTime","_scrollToSo","_lack","_allItemSize","_allItemSizeNoEdge","_scrollItem","_thisNodeUt","_virtual","_numItems","_onScrolling","updateRate","_updateRate","selectedId","t","item","repeatEventSingle","getItemByListId","listItem","getComponent","selected","lastItem","selectedEvent","emitEvents","MULT","bool","sub","indexOf","push","splice","numItems","checkInited","error","_resizeContent","frameByFrameRenderNum","layout","enabled","_delRedundantItem","len","n","_createOrUpdateItem2","scrollView","contentChild","children","onLoad","_init","onDestroy","destroy","tmpNode","clear","onEnable","_registerEvent","position","scale","onDisable","_unregisterEvent","node","on","EventType","TOUCH_START","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","SIZE_CHANGED","_onSizeChanged","off","name","resizeMode","startAxis","paddingTop","paddingRight","paddingBottom","paddingLeft","spacingX","spacingY","verticalDirection","horizontalDirection","setTemplateItem","tmpPrefab","ADHERING","inertia","_onMouseWheel","_onTouchMoved","event","captureListeners","enabledInHierarchy","_content","touch","deltaMove","getUIDelta","y","_handleMoveLogic","cancelInnerEvents","getUILocation","subtract","getUIStartLocation","length","_touchMoved","target","cancelEvent","getTouches","bubbles","simulate","dispatchEvent","_stopPropagationIfTargetIsMe","_hasNestedViewGroup","eventPhase","Event","CAPTURING_PHASE","listener","x","propagationStopped","_onTouchEnded","_dispatchEvent","TOUCH_UP","_handleReleaseLogic","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","removeAllChildren","dt","OUT_OF_BOUNDARY_BREAKING_FACTOR","EPSILON","ZERO","quintEaseOut","time","sv","isAutoScrollBrake","brakingFactor","percentage","Math","min","clonedAutoScrollTargetDelta","clone","multiplyScalar","clonedAutoScrollStartPosition","add","reachedEnd","abs","fireEvent","SCROLL_ENG_WITH_THRESHOLD","brakeOffsetPosition","set","moveDelta","outOfBoundary","equals","SCROLLING","SCROLL_ENDED","ResizeMode","CHILDREN","cellSize","itemUt","width","height","com","remove","trimW","floor","trimH","printLog","result","fixed","_getFixedSize","count","lineNum","ceil","colNum","totalSize","spacing","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","slideOffset","targetWH","ev","scrollPos","getPosition","addVal","contentPos","z","setPosition","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","bottom","top","ww","hh","id","haveDataChange","sort","a","b","c","_createOrUpdateItem","_calcNearestItem","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","ut","pos","data","getItemPos","listId","parseInt","to","start","adhere","_pageAdhere","isMe","AT_TARGET","itemNode","_listId","parent","_onItemAdaptive","updateAll","unschedule","scrollTo","max","Date","getTime","curPos","dis","pageDistance","canSkip","timeInSecond","prePage","nextPage","update","canGet","size","get","setContentSize","_resetItemSize","addChild","widget","updateAlignment","setSiblingIndex","list","renderEvent","_updateListItem","_updateItemPos","listIdOrItem","isNaN","setMultSelected","args","Array","isArray","getMultSelected","hasMultSelected","updateItem","_getOutsideItem","find","d","arr","isCached","put","m","_delSingleItem","removeFromParent","aniDelItem","callFunc","aniType","warn","curLastId","resetSelectedId","showAni","newId","newData","newCustomSize","idNumber","sec","twe","haveCB","posData","call","overStress","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","pageChangeEvent","calcCustomSize","temp","Object","keys"],"mappings":"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","sourcesContent":["/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2020/12/9\r\n * @doc 列表组件.\r\n * @end\r\n ******************************************/\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder, requireComponent } = _decorator;\r\nimport { Node, Component, Enum, tween, _decorator, EventHandler, Tween, ScrollView, Prefab, Layout, Vec2, Size, NodePool, isValid, instantiate, Vec3, Widget, UITransform, CCFloat, CCBoolean, CCInteger, EventTouch, SystemEventType, ViewGroup } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport Log from '../../../Library/Base/Log';\r\nimport ListItem from './ListItem';\r\n\r\nenum TemplateType {\r\n    NODE = 1,\r\n    PREFAB = 2,\r\n}\r\n\r\nenum SlideType {\r\n    NORMAL = 1,//普通\r\n    ADHERING = 2,//粘附模式，将强制关闭滚动惯性\r\n    PAGE = 3,//页面模式，将强制关闭滚动惯性\r\n}\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    SINGLE = 1,//单选\r\n    MULT = 2,//多选\r\n}\r\n\r\nconst _tempVec2 = new Vec2();\r\nconst _tempVec2_1 = new Vec2();\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('List')\r\n@requireComponent(ScrollView)\r\n//脚本生命周期回调的执行优先级。小于 0 的脚本将优先执行，大于 0 的脚本将最后执行。该优先级只对 onLoad, onEnable, start, update 和 lateUpdate 有效，对 onDisable 和 onDestroy 无效。\r\n@executionOrder(-5000)\r\nexport default class List extends Component {\r\n    //模板类型\r\n    @property({ type: Enum(TemplateType), tooltip: DEV && '模板类型', })\r\n    private templateType: TemplateType = TemplateType.NODE;\r\n    //模板Item（Node）\r\n    @property({\r\n        type: Node,\r\n        tooltip: DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.NODE; }\r\n    })\r\n    tmpNode: Node = null;\r\n    //模板Item（Prefab）\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.PREFAB; }\r\n    })\r\n    tmpPrefab: Prefab = null;\r\n    //滑动模式\r\n    @property({})\r\n    private _slideMode: SlideType = SlideType.NORMAL;\r\n    @property({\r\n        type: Enum(SlideType),\r\n        tooltip: DEV && '滑动模式'\r\n    })\r\n    set slideMode(val: SlideType) {\r\n        this._slideMode = val;\r\n    }\r\n    get slideMode() {\r\n        return this._slideMode;\r\n    }\r\n    //翻页作用距离\r\n    @property({\r\n        type: CCFloat,\r\n        range: [0, 1, .1],\r\n        tooltip: DEV && '翻页作用距离',\r\n        slide: true,\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    public pageDistance: number = .3;\r\n    //页面改变事件\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '页面改变事件',\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    private pageChangeEvent: EventHandler = new EventHandler();\r\n    //是否为虚拟列表（动态列表）\r\n    @property({})\r\n    private _virtual: boolean = true;\r\n    @property({\r\n        type: CCBoolean,\r\n        tooltip: DEV && '是否为虚拟列表（动态列表）'\r\n    })\r\n    set virtual(val: boolean) {\r\n        if (val != null)\r\n            this._virtual = val;\r\n        if (!DEV && this._numItems != 0) {\r\n            this._onScrolling();\r\n        }\r\n    }\r\n    get virtual() {\r\n        return this._virtual;\r\n    }\r\n    //是否为循环列表\r\n    @property({\r\n        tooltip: DEV && '是否为循环列表',\r\n        visible() {\r\n            let val: boolean = /*this.virtual &&*/ this.slideMode == SlideType.NORMAL;\r\n            if (!val)\r\n                this.cyclic = false;\r\n            return val;\r\n        }\r\n    })\r\n    public cyclic: boolean = false;\r\n    //缺省居中\r\n    @property({\r\n        tooltip: DEV && 'Item数量不足以填满Content时，是否居中显示Item（不支持Grid布局）',\r\n        visible() { return this.virtual; }\r\n    })\r\n    public lackCenter: boolean = false;\r\n    //缺省可滑动\r\n    @property({\r\n        tooltip: DEV && 'Item数量不足以填满Content时，是否可滑动',\r\n        visible() {\r\n            let val: boolean = this.virtual && !this.lackCenter;\r\n            if (!val)\r\n                this.lackSlide = false;\r\n            return val;\r\n        }\r\n    })\r\n    public lackSlide: boolean = false;\r\n    //刷新频率\r\n    @property({ type: CCInteger })\r\n    private _updateRate: number = 0;\r\n    @property({\r\n        type: CCInteger,\r\n        range: [0, 6, 1],\r\n        tooltip: DEV && '刷新频率（值越大刷新频率越低、性能越高）',\r\n        slide: true,\r\n    })\r\n    set updateRate(val: number) {\r\n        if (val >= 0 && val <= 6) {\r\n            this._updateRate = val;\r\n        }\r\n    }\r\n    get updateRate() {\r\n        return this._updateRate;\r\n    }\r\n    //分帧渲染（每帧渲染的Item数量（<=0时关闭分帧渲染））\r\n    @property({\r\n        type: CCInteger,\r\n        range: [0, 12, 1],\r\n        tooltip: DEV && '逐帧渲染时，每帧渲染的Item数量（<=0时关闭分帧渲染）',\r\n        slide: true,\r\n    })\r\n    public frameByFrameRenderNum: number = 0;\r\n    //渲染事件（渲染器）\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '渲染事件（渲染器）',\r\n    })\r\n    public renderEvent: EventHandler = new EventHandler();\r\n    //选择模式\r\n    @property({\r\n        type: Enum(SelectedType),\r\n        tooltip: DEV && '选择模式'\r\n    })\r\n    public selectedMode: SelectedType = SelectedType.NONE;\r\n    //触发选择事件\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '触发选择事件',\r\n        visible() { return this.selectedMode > SelectedType.NONE; }\r\n    })\r\n    public selectedEvent: EventHandler = new EventHandler();\r\n    @property({\r\n        tooltip: DEV && '是否重复响应单选事件',\r\n        visible() { return this.selectedMode == SelectedType.SINGLE; }\r\n    })\r\n    public repeatEventSingle: boolean = false;\r\n\r\n    //当前选择id\r\n    private _selectedId: number = -1;\r\n    private _lastSelectedId: number;\r\n    private multSelected: number[];\r\n    set selectedId(val: number) {\r\n        let t: any = this;\r\n        let item: any;\r\n        switch (t.selectedMode) {\r\n            case SelectedType.SINGLE: {\r\n                if (!t.repeatEventSingle && val == t._selectedId)\r\n                    return;\r\n                item = t.getItemByListId(val);\r\n                // if (!item && val >= 0)\r\n                //     return;\r\n                let listItem: ListItem;\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                else //如果＜0则取消选择，把_lastSelectedId也置空吧，如果以后有特殊需求再改吧。\r\n                    t._lastSelectedId = null;\r\n                t._selectedId = val;\r\n                if (item) {\r\n                    listItem = item.getComponent(ListItem);\r\n                    listItem.selected = true;\r\n                }\r\n                if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\r\n                    let lastItem: any = t.getItemByListId(t._lastSelectedId);\r\n                    if (lastItem) {\r\n                        lastItem.getComponent(ListItem).selected = false;\r\n                    }\r\n                }\r\n                if (t.selectedEvent) {\r\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems));\r\n                }\r\n                break;\r\n            }\r\n            case SelectedType.MULT: {\r\n                item = t.getItemByListId(val);\r\n                if (!item)\r\n                    return;\r\n                let listItem = item.getComponent(ListItem);\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                t._selectedId = val;\r\n                let bool: boolean = !listItem.selected;\r\n                listItem.selected = bool;\r\n                let sub: number = t.multSelected.indexOf(val);\r\n                if (bool && sub < 0) {\r\n                    t.multSelected.push(val);\r\n                } else if (!bool && sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                if (t.selectedEvent) {\r\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems), bool);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get selectedId() {\r\n        return this._selectedId;\r\n    }\r\n    private _forceUpdate: boolean = false;\r\n    private _align: number;\r\n    private _horizontalDir: number;\r\n    private _verticalDir: number;\r\n    private _startAxis: number;\r\n    private _alignCalcType: number;\r\n    public content: Node;\r\n    private _contentUt: UITransform;\r\n    private firstListId: number;\r\n    public displayItemNum: number;\r\n    private _updateDone: boolean = true;\r\n    private _updateCounter: number;\r\n    public _actualNumItems: number;\r\n    private _cyclicNum: number;\r\n    private _cyclicPos1: number;\r\n    private _cyclicPos2: number;\r\n    //列表数量\r\n    @property({\r\n        serializable: false\r\n    })\r\n    private _numItems: number = 0;\r\n    set numItems(val: number) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        if (val == null || val < 0) {\r\n            Log.error('numItems set the wrong::', val);\r\n            return;\r\n        }\r\n        t._actualNumItems = t._numItems = val;\r\n        t._forceUpdate = true;\r\n\r\n        if (t._virtual) {\r\n            t._resizeContent();\r\n            if (t.cyclic) {\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            t._onScrolling();\r\n            if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\r\n                t.curPageNum = t.nearestListId;\r\n        } else {\r\n            if (t.cyclic) {\r\n                t._resizeContent();\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            let layout: Layout = t.content.getComponent(Layout);\r\n            if (layout) {\r\n                layout.enabled = true;\r\n            }\r\n            t._delRedundantItem();\r\n\r\n            t.firstListId = 0;\r\n            if (t.frameByFrameRenderNum > 0) {\r\n                //先渲染几个出来\r\n                let len: number = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\r\n                for (let n: number = 0; n < len; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                if (t.frameByFrameRenderNum < t._numItems) {\r\n                    t._updateCounter = t.frameByFrameRenderNum;\r\n                    t._updateDone = false;\r\n                }\r\n            } else {\r\n                for (let n: number = 0; n < t._numItems; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                t.displayItemNum = t._numItems;\r\n            }\r\n        }\r\n    }\r\n    get numItems() {\r\n        return this._actualNumItems;\r\n    }\r\n\r\n    private _inited: boolean = false;\r\n    private _scrollView: ScrollView;\r\n    get scrollView() {\r\n        return this._scrollView;\r\n    }\r\n    private _layout: Layout;\r\n    private _resizeMode: number;\r\n    private _topGap: number;\r\n    private _rightGap: number;\r\n    private _bottomGap: number;\r\n    private _leftGap: number;\r\n\r\n    private _columnGap: number;\r\n    private _lineGap: number;\r\n    private _colLineNum: number;\r\n\r\n    private _lastDisplayData: number[];\r\n    public displayData: any[];\r\n    private _pool: NodePool;\r\n\r\n    private _itemTmp: any;\r\n    private _itemTmpUt: UITransform;\r\n    private _needUpdateWidget: boolean = false;\r\n    private _itemSize: Size;\r\n    private _sizeType: boolean;\r\n\r\n    public _customSize: any;\r\n\r\n    private frameCount: number;\r\n    private _aniDelRuning: boolean = false;\r\n    private _aniDelCB: Function;\r\n    private _aniDelItem: any;\r\n    private _aniDelBeforePos: Vec2;\r\n    private _aniDelBeforeScale: number;\r\n    private viewTop: number;\r\n    private viewRight: number;\r\n    private viewBottom: number;\r\n    private viewLeft: number;\r\n\r\n    private _doneAfterUpdate: boolean = false;\r\n\r\n    private elasticTop: number;\r\n    private elasticRight: number;\r\n    private elasticBottom: number;\r\n    private elasticLeft: number;\r\n\r\n    private scrollToListId: number;\r\n\r\n    private adhering: boolean = false;\r\n\r\n    private _adheringBarrier: boolean = false;\r\n    private nearestListId: number;\r\n\r\n    public curPageNum: number = 0;\r\n    private _beganPos: number;\r\n    private _scrollPos: number;\r\n    private _curScrollIsTouch: boolean;//当前滑动是否为手动\r\n\r\n    private _scrollToListId: number;\r\n    private _scrollToEndTime: number;\r\n    private _scrollToSo: any;\r\n\r\n    private _lack: boolean;\r\n    private _allItemSize: number;\r\n    private _allItemSizeNoEdge: number;\r\n\r\n    private _scrollItem: any;//当前控制 ScrollView 滚动的 Item\r\n\r\n    private _thisNodeUt: UITransform;\r\n\r\n    get contentChild(){\r\n        return this.content.children;\r\n    }\r\n\r\n    //----------------------------------------------------------------------------\r\n\r\n    onLoad() {\r\n        this._init();\r\n    }\r\n\r\n    onDestroy() {\r\n        let t: any = this;\r\n        if (isValid(t._itemTmp))\r\n            t._itemTmp.destroy();\r\n        if (isValid(t.tmpNode))\r\n            t.tmpNode.destroy();\r\n        t._pool && t._pool.clear();\r\n    }\r\n\r\n    onEnable() {\r\n        // if (!EDITOR) \r\n        this._registerEvent();\r\n        this._init();\r\n        // 处理重新显示后，有可能上一次的动画移除还未播放完毕，导致动画卡住的问题\r\n        if (this._aniDelRuning) {\r\n            this._aniDelRuning = false;\r\n            if (this._aniDelItem) {\r\n                if (this._aniDelBeforePos) {\r\n                    this._aniDelItem.position = this._aniDelBeforePos;\r\n                    delete this._aniDelBeforePos;\r\n                }\r\n                if (this._aniDelBeforeScale) {\r\n                    this._aniDelItem.scale = this._aniDelBeforeScale;\r\n                    delete this._aniDelBeforeScale;\r\n                }\r\n                delete this._aniDelItem;\r\n            }\r\n            if (this._aniDelCB) {\r\n                this._aniDelCB();\r\n                delete this._aniDelCB;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        // if (!EDITOR) \r\n        this._unregisterEvent();\r\n    }\r\n    //注册事件\r\n    _registerEvent() {\r\n        let t: any = this;\r\n        t.node.on(Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.on('touch-up', t._onTouchUp, t);\r\n        t.node.on(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.on('scroll-began', t._onScrollBegan, t);\r\n        t.node.on('scroll-ended', t._onScrollEnded, t);\r\n        t.node.on('scrolling', t._onScrolling, t);\r\n        t.node.on(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //卸载事件\r\n    _unregisterEvent() {\r\n        let t: any = this;\r\n        t.node.off(Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.off('touch-up', t._onTouchUp, t);\r\n        t.node.off(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.off('scroll-began', t._onScrollBegan, t);\r\n        t.node.off('scroll-ended', t._onScrollEnded, t);\r\n        t.node.off('scrolling', t._onScrolling, t);\r\n        t.node.off(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //初始化各种..\r\n    _init() {\r\n        let t: any = this;\r\n        if (t._inited)\r\n            return;\r\n\r\n        t._thisNodeUt = t.node.getComponent(UITransform);\r\n        t._scrollView = t.node.getComponent(ScrollView);\r\n\r\n        t.content = t._scrollView.content;\r\n        t._contentUt = t.content.getComponent(UITransform);\r\n        if (!t.content) {\r\n            Log.error(t.node.name + \"'s ScrollView unset content!\");\r\n            return;\r\n        }\r\n\r\n        t._layout = t.content.getComponent(Layout);\r\n\r\n        t._align = t._layout.type; //排列模式\r\n        t._resizeMode = t._layout.resizeMode; //自适应模式\r\n        t._startAxis = t._layout.startAxis;\r\n\r\n        t._topGap = t._layout.paddingTop; //顶边距\r\n        t._rightGap = t._layout.paddingRight; //右边距\r\n        t._bottomGap = t._layout.paddingBottom; //底边距\r\n        t._leftGap = t._layout.paddingLeft; //左边距\r\n\r\n        t._columnGap = t._layout.spacingX; //列距\r\n        t._lineGap = t._layout.spacingY; //行距\r\n\r\n        t._colLineNum; //列数或行数（非GRID模式则=1，表示单列或单行）;\r\n\r\n        t._verticalDir = t._layout.verticalDirection; //垂直排列子节点的方向\r\n        t._horizontalDir = t._layout.horizontalDirection; //水平排列子节点的方向\r\n\r\n        t.setTemplateItem(instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\r\n\r\n        // 特定的滑动模式处理\r\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE) {\r\n            t._scrollView.inertia = false;\r\n            t._scrollView._onMouseWheel = function () {\r\n                return;\r\n            };\r\n        }\r\n\r\n        if(!t._sizeType) {\r\n            t._scrollView._onTouchMoved = function (event: EventTouch, captureListeners?: Node[]) {\r\n                if (!this.enabledInHierarchy || !this._content) { return; }\r\n                       \r\n                const touch = event.touch!;\r\n                let deltaMove = touch.getUIDelta();\r\n                // console.log(deltaMove.x,deltaMove.y,t.node.parent.name);\r\n                if(deltaMove.y > 7 || deltaMove.y < -7){\r\n                    return;\r\n                }\r\n\r\n                this._handleMoveLogic(touch);\r\n        \r\n                // Do not prevent touch events in inner nodes\r\n                if (!this.cancelInnerEvents) {\r\n                    return;\r\n                }\r\n        \r\n                deltaMove = touch.getUILocation(_tempVec2);\r\n                deltaMove.subtract(touch.getUIStartLocation(_tempVec2_1));\r\n                // FIXME: touch move delta should be calculated by DPI.\r\n                if (deltaMove.length() > 7) {\r\n                    if (!this._touchMoved && event.target !== this.node) {\r\n                        // Simulate touch cancel for target node\r\n                        const cancelEvent = new EventTouch(event.getTouches(), event.bubbles, SystemEventType.TOUCH_CANCEL);\r\n                        cancelEvent.touch = event.touch;\r\n                        cancelEvent.simulate = true;\r\n                        (event.target as Node).dispatchEvent(cancelEvent);\r\n                        this._touchMoved = true;\r\n                    }\r\n                }\r\n                this._stopPropagationIfTargetIsMe(event);\r\n            }\r\n        }else{\r\n            t._scrollView._hasNestedViewGroup = function (event: EventTouch, captureListeners?: Node[]) {\r\n                if (!event || event.eventPhase !== Event.CAPTURING_PHASE) {\r\n                    return false;\r\n                }\r\n        \r\n                if (captureListeners) {\r\n                    // captureListeners are arranged from child to parent\r\n                    for (const listener of captureListeners) {\r\n                        const item = listener;\r\n        \r\n                        if (this.node === item) {\r\n                            if (event.target && (event.target as Node).getComponent(ViewGroup)) {\r\n                                let deltaMove = event.getUIDelta();\r\n                                // console.log(deltaMove.x,deltaMove.y,t.node.parent.name);\r\n                                if(deltaMove.x > 10 || deltaMove.x < -10) {\r\n                                    // console.log(deltaMove.x,1111,t.node.parent.name);\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            }\r\n                            return false;\r\n                        }\r\n        \r\n                        if (item.getComponent(ViewGroup)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n\r\n            t._scrollView._onTouchMoved = function (event: EventTouch, captureListeners?: Node[]) {\r\n                if (!this.enabledInHierarchy || !this._content) { return; }\r\n                       \r\n                const touch = event.touch!;\r\n                let deltaMove = touch.getUIDelta();\r\n                // console.log(deltaMove.x,deltaMove.y,t.node.parent.name);\r\n                if(deltaMove.x > 10 || deltaMove.x < -10) {\r\n                    // console.log(deltaMove.x,1111,t.node.parent.name);\r\n                    // this._dispatchEvent(ScrollView.EventType.TOUCH_UP);\r\n                    return;\r\n                }\r\n                \r\n                this._handleMoveLogic(touch);\r\n        \r\n                // Do not prevent touch events in inner nodes\r\n                if (!this.cancelInnerEvents) {\r\n                    return;\r\n                }\r\n        \r\n                deltaMove = touch.getUILocation(_tempVec2);\r\n                deltaMove.subtract(touch.getUIStartLocation(_tempVec2_1));\r\n                // FIXME: touch move delta should be calculated by DPI.\r\n                if (deltaMove.length() > 7) {\r\n                    if (!this._touchMoved && event.target !== this.node) {\r\n                        // Simulate touch cancel for target node\r\n                        const cancelEvent = new EventTouch(event.getTouches(), event.bubbles, SystemEventType.TOUCH_CANCEL);\r\n                        cancelEvent.touch = event.touch;\r\n                        cancelEvent.simulate = true;\r\n                        (event.target as Node).dispatchEvent(cancelEvent);\r\n                        this._touchMoved = true;\r\n                    }\r\n                }\r\n\r\n                event.propagationStopped = true;\r\n            }\r\n\r\n            t._scrollView._onTouchEnded = function (event: EventTouch, captureListeners?: Node[]) {\r\n                if (!this.enabledInHierarchy || !this._content) { return; }\r\n                       \r\n                this._dispatchEvent(ScrollView.EventType.TOUCH_UP);\r\n\r\n                const touch = event.touch!;\r\n                this._handleReleaseLogic(touch);\r\n        \r\n                if (this._touchMoved) {\r\n                    event.propagationStopped = true;\r\n                    this._touchMoved = false;\r\n                } else {\r\n                    this._stopPropagationIfTargetIsMe(event);\r\n                }\r\n            }\r\n\r\n            t._scrollView._onTouchCancelled = function (event: EventTouch, captureListeners?: Node[]) {\r\n                if (!this.enabledInHierarchy || !this._content) { return; }\r\n                       \r\n                 // Filter touch cancel event send from self\r\n                    if (event && !event.simulate) {\r\n                        const touch = event.touch!;\r\n                        this._handleReleaseLogic(touch);\r\n                    }\r\n                    this._touchMoved = false;\r\n                    this._stopPropagationIfTargetIsMe(event);\r\n            }\r\n        }\r\n\r\n    \r\n        if (!t.virtual)         // lackCenter 仅支持 Virtual 模式\r\n            t.lackCenter = false;\r\n\r\n        t._lastDisplayData = []; //最后一次刷新的数据\r\n        t.displayData = []; //当前数据\r\n        t._pool = new NodePool();    //这是个池子..\r\n        t._forceUpdate = false;         //是否强制更新\r\n        t._updateCounter = 0;           //当前分帧渲染帧数\r\n        t._updateDone = true;           //分帧渲染是否完成\r\n\r\n        t.curPageNum = 0;               //当前页数\r\n\r\n        if (t.cyclic || 0) {\r\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\r\n            t._scrollView._startBounceBackIfNeeded = function () {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL: {\r\n                switch (t._horizontalDir) {\r\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                        t._alignCalcType = 1;\r\n                        break;\r\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                        t._alignCalcType = 2;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.VERTICAL: {\r\n                switch (t._verticalDir) {\r\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                        t._alignCalcType = 3;\r\n                        break;\r\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                        t._alignCalcType = 4;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.GRID: {\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        switch (t._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                                t._alignCalcType = 3;\r\n                                break;\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                                t._alignCalcType = 4;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        switch (t._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                                t._alignCalcType = 1;\r\n                                break;\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                                t._alignCalcType = 2;\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // 清空 content\r\n        // t.content.children.forEach((child: Node) => {\r\n        //     child.removeFromParent();\r\n        //     if (child != t.tmpNode && child.isValid)\r\n        //         child.destroy();\r\n        // });\r\n        t.content.removeAllChildren();\r\n        t._inited = true;\r\n    }\r\n    /**\r\n     * 为了实现循环列表，必须覆写cc.ScrollView的某些函数\r\n     * @param {Number} dt\r\n     */\r\n    _processAutoScrolling(dt: number) {\r\n\r\n        // ------------- scroll-view 里定义的一些常量 -------------\r\n        const OUT_OF_BOUNDARY_BREAKING_FACTOR = 0.05;\r\n        const EPSILON = 1e-4;\r\n        const ZERO = new Vec3();\r\n        const quintEaseOut = (time: number) => {\r\n            time -= 1;\r\n            return (time * time * time * time * time + 1);\r\n        };\r\n        // ------------- scroll-view 里定义的一些常量 -------------\r\n\r\n        let sv: ScrollView = this._scrollView;\r\n\r\n        const isAutoScrollBrake = sv['_isNecessaryAutoScrollBrake']();\r\n        const brakingFactor = isAutoScrollBrake ? OUT_OF_BOUNDARY_BREAKING_FACTOR : 1;\r\n        sv['_autoScrollAccumulatedTime'] += dt * (1 / brakingFactor);\r\n\r\n        let percentage = Math.min(1, sv['_autoScrollAccumulatedTime'] / sv['_autoScrollTotalTime']);\r\n        if (sv['_autoScrollAttenuate']) {\r\n            percentage = quintEaseOut(percentage);\r\n        }\r\n\r\n        const clonedAutoScrollTargetDelta = sv['_autoScrollTargetDelta'].clone();\r\n        clonedAutoScrollTargetDelta.multiplyScalar(percentage);\r\n        const clonedAutoScrollStartPosition = sv['_autoScrollStartPosition'].clone();\r\n        clonedAutoScrollStartPosition.add(clonedAutoScrollTargetDelta);\r\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\r\n\r\n        const fireEvent = Math.abs(percentage - 1) <= sv['getScrollEndedEventTiming']();\r\n        if (fireEvent && !sv['_isScrollEndedWithThresholdEventFired']) {\r\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENG_WITH_THRESHOLD);\r\n            sv['_isScrollEndedWithThresholdEventFired'] = true;\r\n        }\r\n\r\n        if (sv['elastic']) {\r\n            const brakeOffsetPosition = clonedAutoScrollStartPosition.clone();\r\n            brakeOffsetPosition.subtract(sv['_autoScrollBrakingStartPosition']);\r\n            if (isAutoScrollBrake) {\r\n                brakeOffsetPosition.multiplyScalar(brakingFactor);\r\n            }\r\n            clonedAutoScrollStartPosition.set(sv['_autoScrollBrakingStartPosition']);\r\n            clonedAutoScrollStartPosition.add(brakeOffsetPosition);\r\n        } else {\r\n            const moveDelta = clonedAutoScrollStartPosition.clone();\r\n            moveDelta.subtract(sv['_getContentPosition']());\r\n            const outOfBoundary = sv['_getHowMuchOutOfBoundary'](moveDelta);\r\n            if (!outOfBoundary.equals(ZERO, EPSILON)) {\r\n                clonedAutoScrollStartPosition.add(outOfBoundary);\r\n                reachedEnd = true;\r\n            }\r\n        }\r\n\r\n        if (reachedEnd) {\r\n            sv['_autoScrolling'] = false;\r\n        }\r\n\r\n        const deltaMove = new Vec3(clonedAutoScrollStartPosition);\r\n        deltaMove.subtract(sv['_getContentPosition']());\r\n        sv['_clampDelta'](deltaMove);\r\n        sv['_moveContent'](deltaMove, reachedEnd);\r\n        sv['_dispatchEvent'](ScrollView.EventType.SCROLLING);\r\n\r\n        if (!sv['_autoScrolling']) {\r\n            sv['_isBouncing'] = false;\r\n            sv['_scrolling'] = false;\r\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENDED);\r\n        }\r\n    }\r\n    //设置模板Item\r\n    setTemplateItem(item: any) {\r\n        if (!item)\r\n            return;\r\n        let t: any = this;\r\n        t._itemTmp = item;\r\n        t._itemTmpUt = item.getComponent(UITransform);\r\n\r\n        if (t._resizeMode == Layout.ResizeMode.CHILDREN)\r\n            t._itemSize = t._layout.cellSize;\r\n        else {\r\n            let itemUt: UITransform = item.getComponent(UITransform);\r\n            t._itemSize = new Size(itemUt.width, itemUt.height);\r\n        }\r\n\r\n        //获取ListItem，如果没有就取消选择模式\r\n        let com: any = item.getComponent(ListItem);\r\n        let remove = false;\r\n        if (!com)\r\n            remove = true;\r\n        // if (com) {\r\n        //     if (!com._btnCom && !item.getComponent(cc.Button)) {\r\n        //         remove = true;\r\n        //     }\r\n        // }\r\n        if (remove) {\r\n            t.selectedMode = SelectedType.NONE;\r\n        }\r\n        com = item.getComponent(Widget);\r\n        if (com && com.enabled) {\r\n            t._needUpdateWidget = true;\r\n        }\r\n        if (t.selectedMode == SelectedType.MULT)\r\n            t.multSelected = [];\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = false;\r\n                break;\r\n            case Layout.Type.VERTICAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = true;\r\n                break;\r\n            case Layout.Type.GRID:\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        //计算列数\r\n                        let trimW: number = t._contentUt.width - t._leftGap - t._rightGap;\r\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\r\n                        t._sizeType = true;\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        //计算行数\r\n                        let trimH: number = t._contentUt.height - t._topGap - t._bottomGap;\r\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\r\n                        t._sizeType = false;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 检查是否初始化\r\n     * @param {Boolean} printLog 是否打印错误信息\r\n     * @returns\r\n     */\r\n    checkInited(printLog: boolean = true) {\r\n        if (!this._inited) {\r\n            if (printLog)\r\n                Log.error('List initialization not completed!');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //禁用 Layout 组件，自行计算 Content Size\r\n    _resizeContent() {\r\n        let t: any = this;\r\n        let result: number;\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                } else {\r\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.VERTICAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                } else {\r\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.GRID: {\r\n                //网格模式不支持居中\r\n                if (t.lackCenter)\r\n                    t.lackCenter = false;\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        let lineNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        let colNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let layout: Layout = t.content.getComponent(Layout);\r\n        if (layout)\r\n            layout.enabled = false;\r\n\r\n        t._allItemSize = result;\r\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\r\n\r\n        if (t.cyclic) {\r\n            let totalSize: number = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n\r\n            t._cyclicPos1 = 0;\r\n            totalSize -= t._cyclicPos1;\r\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\r\n            let spacing: number = t._sizeType ? t._lineGap : t._columnGap;\r\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\r\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\r\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\r\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\r\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\r\n        }\r\n\r\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n        let slideOffset: number = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\r\n\r\n        let targetWH: number = t._lack ? ((t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\r\n        if (targetWH < 0)\r\n            targetWH = 0;\r\n\r\n        if (t._sizeType) {\r\n            t._contentUt.height = targetWH;\r\n        } else {\r\n            t._contentUt.width = targetWH;\r\n        }\r\n\r\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\r\n    }\r\n\r\n    //滚动进行时...\r\n    _onScrolling(ev: Event = null) {\r\n        if (this.frameCount == null)\r\n            this.frameCount = this._updateRate;\r\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\r\n            this.frameCount--;\r\n            return;\r\n        } else\r\n            this.frameCount = this._updateRate;\r\n\r\n        if (this._aniDelRuning)\r\n            return;\r\n\r\n        //循环列表处理\r\n        if (this.cyclic) {\r\n            let scrollPos: any = this.content.getPosition();\r\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\r\n\r\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\r\n            let add: any = this._sizeType ? new Vec3(0, addVal, 0) : new Vec3(addVal, 0, 0);\r\n\r\n            let contentPos = this.content.getPosition();\r\n\r\n            switch (this._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        contentPos.set(-this._cyclicPos2, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos += add;\r\n                        // }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        contentPos.set(-this._cyclicPos1, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos -= add;\r\n                        // }\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        contentPos.set(this._cyclicPos2, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        contentPos.set(this._cyclicPos1, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        contentPos.set(contentPos.x, this._cyclicPos2, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        contentPos.set(contentPos.x, this._cyclicPos1, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        contentPos.set(contentPos.x, -this._cyclicPos2, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        contentPos.set(contentPos.x, -this._cyclicPos1, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        if (this._sizeType) {\r\n            vTop = this.viewTop;\r\n            vBottom = this.viewBottom;\r\n        } else {\r\n            vRight = this.viewRight;\r\n            vLeft = this.viewLeft;\r\n        }\r\n\r\n        if (this._virtual) {\r\n            this.displayData = [];\r\n            let itemPos: any;\r\n\r\n            let curId: number = 0;\r\n            let endId: number = this._numItems - 1;\r\n\r\n            if (this._customSize) {\r\n                let breakFor: boolean = false;\r\n                //如果该item的位置在可视区域内，就推入displayData\r\n                for (; curId <= endId && !breakFor; curId++) {\r\n                    itemPos = this._calcItemPos(curId);\r\n                    switch (this._align) {\r\n                        case Layout.Type.HORIZONTAL:\r\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case Layout.Type.VERTICAL:\r\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case Layout.Type.GRID:\r\n                            switch (this._startAxis) {\r\n                                case Layout.AxisDirection.HORIZONTAL:\r\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                                case Layout.AxisDirection.VERTICAL:\r\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                let ww: number = this._itemSize.width + this._columnGap;\r\n                let hh: number = this._itemSize.height + this._lineGap;\r\n                switch (this._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        curId = (vLeft - this._leftGap) / ww;\r\n                        endId = (vRight - this._leftGap) / ww;\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        curId = (-vRight - this._rightGap) / ww;\r\n                        endId = (-vLeft - this._rightGap) / ww;\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        curId = (-vTop - this._topGap) / hh;\r\n                        endId = (-vBottom - this._topGap) / hh;\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        curId = (vBottom - this._bottomGap) / hh;\r\n                        endId = (vTop - this._bottomGap) / hh;\r\n                        break;\r\n                }\r\n                curId = Math.floor(curId) * this._colLineNum;\r\n                endId = Math.ceil(endId) * this._colLineNum;\r\n                endId--;\r\n                if (curId < 0)\r\n                    curId = 0;\r\n                if (endId >= this._numItems)\r\n                    endId = this._numItems - 1;\r\n                for (; curId <= endId; curId++) {\r\n                    this.displayData.push(this._calcItemPos(curId));\r\n                }\r\n            }\r\n            this._delRedundantItem();\r\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\r\n                this._lastDisplayData = [];\r\n                return;\r\n            }\r\n            this.firstListId = this.displayData[0].id;\r\n            this.displayItemNum = this.displayData.length;\r\n\r\n            let len: number = this._lastDisplayData.length;\r\n\r\n            let haveDataChange: boolean = this.displayItemNum != len;\r\n            if (haveDataChange) {\r\n                // 如果是逐帧渲染，需要排序\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    this._lastDisplayData.sort((a, b) => { return a - b });\r\n                }\r\n                // 因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\r\n                haveDataChange = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1];\r\n            }\r\n\r\n            if (this._forceUpdate || haveDataChange) {    //如果是强制更新\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    // if (this._updateDone) {\r\n                    // this._lastDisplayData = [];\r\n                    //逐帧渲染\r\n                    if (this._numItems > 0) {\r\n                        if (!this._updateDone) {\r\n                            this._doneAfterUpdate = true;\r\n                        } else {\r\n                            this._updateCounter = 0;\r\n                        }\r\n                        this._updateDone = false;\r\n                    } else {\r\n                        this._updateCounter = 0;\r\n                        this._updateDone = true;\r\n                    }\r\n                    // }\r\n                } else {\r\n                    //直接渲染\r\n                    this._lastDisplayData = [];\r\n                    // cc.log('List Display Data II::', this.displayData);\r\n                    for (let c = 0; c < this.displayItemNum; c++) {\r\n                        this._createOrUpdateItem(this.displayData[c]);\r\n                    }\r\n                    this._forceUpdate = false;\r\n                }\r\n            }\r\n            this._calcNearestItem();\r\n        }\r\n    }\r\n    //计算可视范围\r\n    _calcViewPos() {\r\n        let scrollPos: any = this.content.getPosition();\r\n        switch (this._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\r\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\r\n\r\n                this.viewRight = this.viewLeft + this._thisNodeUt.width;\r\n                this.elasticRight = this.viewRight > this._contentUt.width ? Math.abs(this.viewRight - this._contentUt.width) : 0;\r\n                this.viewRight += this.elasticRight;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\r\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\r\n                this.viewLeft = this.viewRight - this._thisNodeUt.width;\r\n                this.elasticLeft = this.viewLeft < -this._contentUt.width ? Math.abs(this.viewLeft + this._contentUt.width) : 0;\r\n                this.viewLeft -= this.elasticLeft;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\r\n                this.viewBottom = this.viewTop - this._thisNodeUt.height;\r\n                this.elasticBottom = this.viewBottom < -this._contentUt.height ? Math.abs(this.viewBottom + this._contentUt.height) : 0;\r\n                this.viewBottom += this.elasticBottom;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\r\n                this.viewTop = this.viewBottom + this._thisNodeUt.height;\r\n                this.elasticTop = this.viewTop > this._contentUt.height ? Math.abs(this.viewTop - this._contentUt.height) : 0;\r\n                this.viewTop -= this.elasticTop;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n        }\r\n    }\r\n    //计算位置 根据id\r\n    _calcItemPos(id: number) {\r\n        let width: number, height: number, top: number, bottom: number, left: number, right: number, itemX: number, itemY: number;\r\n        switch (this._align) {\r\n            case Layout.Type.HORIZONTAL:\r\n                switch (this._horizontalDir) {\r\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            left -= this._leftGap;\r\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            left += offset;\r\n                        }\r\n                        right = left + width;\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: left + (this._itemTmpUt.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            right += this._rightGap;\r\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            right -= offset;\r\n                        }\r\n                        left = right - width;\r\n                        return {\r\n                            id: id,\r\n                            right: right,\r\n                            left: left,\r\n                            x: left + (this._itemTmpUt.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            case Layout.Type.VERTICAL: {\r\n                switch (this._verticalDir) {\r\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            top += this._topGap;\r\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            top -= offset;\r\n                        }\r\n                        bottom = top - height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmpUt.anchorY * height),\r\n                        };\r\n                    }\r\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            bottom -= this._bottomGap;\r\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            bottom += offset;\r\n                        }\r\n                        top = bottom + height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmpUt.anchorY * height),\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            case Layout.Type.GRID: {\r\n                let colLine: number = Math.floor(id / this._colLineNum);\r\n                switch (this._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL: {\r\n                        switch (this._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\r\n                                bottom = top - this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\r\n                                top = bottom + this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\r\n                        switch (this._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                itemX += (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                itemX += ((1 - this._itemTmpUt.anchorX) * this._itemSize.width);\r\n                                itemX -= ((1 - this._contentUt.anchorX) * this._contentUt.width);\r\n                                itemX *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                    case Layout.AxisDirection.VERTICAL: {\r\n                        switch (this._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\r\n                                right = left + this._itemSize.width;\r\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\r\n                                left = right - this._itemSize.width;\r\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX += ((1 - this._contentUt.anchorX) * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\r\n                        switch (this._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                itemY -= ((1 - this._itemTmpUt.anchorY) * this._itemSize.height);\r\n                                itemY += ((1 - this._contentUt.anchorY) * this._contentUt.height);\r\n                                break;\r\n                            }\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                itemY -= ((this._itemTmpUt.anchorY) * this._itemSize.height);\r\n                                itemY += (this._contentUt.anchorY * this._contentUt.height);\r\n                                itemY *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //计算已存在的Item的位置\r\n    _calcExistItemPos(id: number) {\r\n        let item: any = this.getItemByListId(id);\r\n        if (!item)\r\n            return null;\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        let pos: Vec3 = item.getPosition();\r\n        let data: any = {\r\n            id: id,\r\n            x: pos.x,\r\n            y: pos.y,\r\n        }\r\n        if (this._sizeType) {\r\n            data.top = pos.y + (ut.height * (1 - ut.anchorY));\r\n            data.bottom = pos.y - (ut.height * ut.anchorY);\r\n        } else {\r\n            data.left = pos.x - (ut.width * ut.anchorX);\r\n            data.right = pos.x + (ut.width * (1 - ut.anchorX));\r\n        }\r\n        return data;\r\n    }\r\n    //获取Item位置\r\n    getItemPos(id: number) {\r\n        if (this._virtual)\r\n            return this._calcItemPos(id);\r\n        else {\r\n            if (this.frameByFrameRenderNum)\r\n                return this._calcItemPos(id);\r\n            else\r\n                return this._calcExistItemPos(id);\r\n        }\r\n    }\r\n    //获取固定尺寸\r\n    _getFixedSize(listId: number) {\r\n        if (!this._customSize)\r\n            return null;\r\n        if (listId == null)\r\n            listId = this._numItems;\r\n        let fixed: number = 0;\r\n        let count: number = 0;\r\n        for (let id in this._customSize) {\r\n            if (parseInt(id) < listId) {\r\n                fixed += this._customSize[id];\r\n                count++;\r\n            }\r\n        }\r\n        return {\r\n            val: fixed,\r\n            count: count,\r\n        }\r\n    }\r\n    //滚动结束时..\r\n    _onScrollBegan() {\r\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\r\n    }\r\n    //滚动结束时..\r\n    _onScrollEnded() {\r\n        let t: any = this;\r\n        t._curScrollIsTouch = false;\r\n        if (t.scrollToListId != null) {\r\n            let item: any = t.getItemByListId(t.scrollToListId);\r\n            t.scrollToListId = null;\r\n            if (item) {\r\n                tween(item)\r\n                    .to(.1, { scale: 1.06 })\r\n                    .to(.1, { scale: 1 })\r\n                    .start();\r\n            }\r\n        }\r\n        t._onScrolling();\r\n\r\n        if (t._slideMode == SlideType.ADHERING &&\r\n            !t.adhering\r\n        ) {\r\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null && t._curScrollIsTouch) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n    }\r\n    // 触摸时\r\n    _onTouchStart(ev, captureListeners) {\r\n        if (this._scrollView['_hasNestedViewGroup'](ev, captureListeners))\r\n            return;\r\n        this._curScrollIsTouch = true;\r\n        let isMe = ev.eventPhase === Event.AT_TARGET && ev.target === this.node;\r\n        if (!isMe) {\r\n            let itemNode: any = ev.target;\r\n            while (itemNode._listId == null && itemNode.parent)\r\n                itemNode = itemNode.parent;\r\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;\r\n        }\r\n    }\r\n    //触摸抬起时..\r\n    _onTouchUp() {\r\n        let t: any = this;\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (this.adhering)\r\n                this._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n    \r\n    _onTouchCancelled(ev, captureListeners) {\r\n        let t = this;\r\n        if (t._scrollView['_hasNestedViewGroup'](ev, captureListeners) || ev.simulate)\r\n            return;\r\n\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (t.adhering)\r\n                t._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                t._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n    //当尺寸改变\r\n    _onSizeChanged() {\r\n        if (this.checkInited(false))\r\n            this._onScrolling();\r\n    }\r\n    //当Item自适应\r\n    _onItemAdaptive(item: any) {\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        // if (this.checkInited(false)) {\r\n        if (\r\n            (!this._sizeType && ut.width != this._itemSize.width)\r\n            || (this._sizeType && ut.height != this._itemSize.height)\r\n        ) {\r\n            if (!this._customSize)\r\n                this._customSize = {};\r\n            let val = this._sizeType ? ut.height : ut.width;\r\n            if (this._customSize[item._listId] != val) {\r\n                this._customSize[item._listId] = val;\r\n                this._resizeContent();\r\n                // this.content.children.forEach((child: Node) => {\r\n                //     this._updateItemPos(child);\r\n                // });\r\n                this.updateAll();\r\n                // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\r\n                if (this._scrollToListId != null) {\r\n                    this._scrollPos = null;\r\n                    this.unschedule(this._scrollToSo);\r\n                    this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\r\n                }\r\n            }\r\n        }\r\n        // }\r\n    }\r\n    //PAGE粘附\r\n    _pageAdhere() {\r\n        let t = this;\r\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\r\n            return;\r\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\r\n        let dis = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) * t.pageDistance;\r\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\r\n        if (canSkip) {\r\n            let timeInSecond = .5;\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (t._beganPos > curPos) {\r\n                        t.prePage(timeInSecond);\r\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN');\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (t._beganPos < curPos) {\r\n                        t.prePage(timeInSecond);\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                    }\r\n                    break;\r\n            }\r\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\r\n            t.adhere();\r\n        }\r\n        t._beganPos = null;\r\n    }\r\n    //粘附\r\n    adhere() {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\r\n            return;\r\n        t.adhering = true;\r\n        t._calcNearestItem();\r\n        let offset: number = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n        let timeInSecond: number = .7;\r\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\r\n    }\r\n    //Update..\r\n    update() {\r\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\r\n            return;\r\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\r\n        if (this._virtual) {\r\n            let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\r\n            for (let n: number = this._updateCounter; n < len; n++) {\r\n                let data: any = this.displayData[n];\r\n                if (data) {\r\n                    this._createOrUpdateItem(data);\r\n                }\r\n            }\r\n\r\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\r\n                if (this._doneAfterUpdate) {\r\n                    this._updateCounter = 0;\r\n                    this._updateDone = false;\r\n                    // if (!this._scrollView.isScrolling())\r\n                    this._doneAfterUpdate = false;\r\n                } else {\r\n                    this._updateDone = true;\r\n                    this._delRedundantItem();\r\n                    this._forceUpdate = false;\r\n                    this._calcNearestItem();\r\n                    if (this.slideMode == SlideType.PAGE)\r\n                        this.curPageNum = this.nearestListId;\r\n                }\r\n            } else {\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            }\r\n        } else {\r\n            if (this._updateCounter < this._numItems) {\r\n                let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\r\n                for (let n: number = this._updateCounter; n < len; n++) {\r\n                    this._createOrUpdateItem2(n);\r\n                }\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            } else {\r\n                this._updateDone = true;\r\n                this._calcNearestItem();\r\n                if (this.slideMode == SlideType.PAGE)\r\n                    this.curPageNum = this.nearestListId;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 创建或更新Item（虚拟列表用）\r\n     * @param {Object} data 数据\r\n     */\r\n    _createOrUpdateItem(data: any) {\r\n        let item: any = this.getItemByListId(data.id);\r\n        if (!item) { //如果不存在\r\n            let canGet: boolean = this._pool.size() > 0;\r\n            if (canGet) {\r\n                item = this._pool.get();\r\n                // cc.log('从池中取出::   旧id =', item['_listId'], '，新id =', data.id, item);\r\n            } else {\r\n                item = instantiate(this._itemTmp);\r\n                // cc.log('新建::', data.id, item);\r\n            }\r\n            if (!canGet || !isValid(item)) {\r\n                item = instantiate(this._itemTmp);\r\n                canGet = false;\r\n            }\r\n            if (item._listId != data.id) {\r\n                item._listId = data.id;\r\n                let ut: UITransform = item.getComponent(UITransform);\r\n                ut.setContentSize(this._itemSize);\r\n            }\r\n            item.setPosition(new Vec3(data.x, data.y, 0));\r\n            this._resetItemSize(item);\r\n            this.content.addChild(item);\r\n            if (canGet && this._needUpdateWidget) {\r\n                let widget: Widget = item.getComponent(Widget);\r\n                if (widget)\r\n                    widget.updateAlignment();\r\n            }\r\n            item.setSiblingIndex(this.content.children.length - 1);\r\n\r\n            let listItem: ListItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = data.id;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item.setPosition(new Vec3(data.x, data.y, 0));\r\n            this._resetItemSize(item);\r\n            // cc.log('ADD::', data.id, item);\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        }\r\n        this._resetItemSize(item);\r\n\r\n        this._updateListItem(item['listItem']);\r\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\r\n            this._lastDisplayData.push(data.id);\r\n        }\r\n    }\r\n    //创建或更新Item（非虚拟列表用）\r\n    _createOrUpdateItem2(listId: number) {\r\n        let item: any = this.content.children[listId];\r\n        let listItem: ListItem;\r\n        if (!item) { //如果不存在\r\n            item = instantiate(this._itemTmp);\r\n            item._listId = listId;\r\n            this.content.addChild(item);\r\n            listItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = listId;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item._listId = listId;\r\n            if (listItem)\r\n                listItem.listId = listId;\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        }\r\n        this._updateListItem(listItem);\r\n        if (this._lastDisplayData.indexOf(listId) < 0) {\r\n            this._lastDisplayData.push(listId);\r\n        }\r\n    }\r\n\r\n    _updateListItem(listItem: ListItem) {\r\n        if (!listItem)\r\n            return;\r\n        if (this.selectedMode > SelectedType.NONE) {\r\n            let item: any = listItem.node;\r\n            switch (this.selectedMode) {\r\n                case SelectedType.SINGLE:\r\n                    listItem.selected = this.selectedId == item._listId;\r\n                    break;\r\n                case SelectedType.MULT:\r\n                    listItem.selected = this.multSelected.indexOf(item._listId) >= 0;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    //仅虚拟列表用\r\n    _resetItemSize(item: any) {\r\n        return;\r\n        let size: number;\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        if (this._customSize && this._customSize[item._listId]) {\r\n            size = this._customSize[item._listId];\r\n        } else {\r\n            if (this._colLineNum > 1)\r\n                ut.setContentSize(this._itemSize);\r\n            else\r\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\r\n        }\r\n        if (size) {\r\n            if (this._sizeType)\r\n                ut.height = size;\r\n            else\r\n                ut.width = size;\r\n        }\r\n    }\r\n    /**\r\n     * 更新Item位置\r\n     * @param {Number||Node} listIdOrItem\r\n     */\r\n    _updateItemPos(listIdOrItem: any) {\r\n        let item: any = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\r\n        let pos: any = this.getItemPos(item._listId);\r\n        item.setPosition(pos.x, pos.y);\r\n    }\r\n    /**\r\n     * 设置多选\r\n     * @param {Array} args 可以是单个listId，也可是个listId数组\r\n     * @param {Boolean} bool 值，如果为null的话，则直接用args覆盖\r\n     */\r\n    setMultSelected(args: any, bool: boolean) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        if (bool == null) {\r\n            t.multSelected = args;\r\n        } else {\r\n            let listId: number, sub: number;\r\n            if (bool) {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub < 0) {\r\n                        t.multSelected.push(listId);\r\n                    }\r\n                }\r\n            } else {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub >= 0) {\r\n                        t.multSelected.splice(sub, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        t._forceUpdate = true;\r\n        t._onScrolling();\r\n    }\r\n    /**\r\n     * 获取多选数据\r\n     * @returns\r\n     */\r\n    getMultSelected() {\r\n        return this.multSelected;\r\n    }\r\n    /**\r\n     * 多选是否有选择\r\n     * @param {number} listId 索引\r\n     * @returns\r\n     */\r\n    hasMultSelected(listId: number) {\r\n        return this.multSelected && this.multSelected.indexOf(listId) >= 0;\r\n    }\r\n    /**\r\n     * 更新指定的Item\r\n     * @param {Array} args 单个listId，或者数组\r\n     * @returns\r\n     */\r\n    updateItem(args: any) {\r\n        if (!this.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        for (let n: number = 0, len: number = args.length; n < len; n++) {\r\n            let listId: number = args[n];\r\n            let item: any = this.getItemByListId(listId);\r\n            if (item)\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n        }\r\n    }\r\n    /**\r\n     * 更新全部\r\n     */\r\n    updateAll() {\r\n        if (!this.checkInited())\r\n            return;\r\n        this.numItems = this.numItems;\r\n    }\r\n    /**\r\n     * 根据ListID获取Item\r\n     * @param {Number} listId\r\n     * @returns\r\n     */\r\n    getItemByListId(listId: number) {\r\n        if (this.content) {\r\n            for (let n: number = this.content.children.length - 1; n >= 0; n--) {\r\n                let item: any = this.content.children[n];\r\n                if (item._listId == listId)\r\n                    return item;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取在显示区域外的Item\r\n     * @returns\r\n     */\r\n    _getOutsideItem() {\r\n        let item: any;\r\n        let result: any[] = [];\r\n        for (let n: number = this.content.children.length - 1; n >= 0; n--) {\r\n            item = this.content.children[n];\r\n            if (!this.displayData.find(d => d.id == item._listId)) {\r\n                result.push(item);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    //删除显示区域以外的Item\r\n    _delRedundantItem() {\r\n        if (this._virtual) {\r\n            let arr: any[] = this._getOutsideItem();\r\n            for (let n: number = arr.length - 1; n >= 0; n--) {\r\n                let item: any = arr[n];\r\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\r\n                    continue;\r\n                item.isCached = true;\r\n                this._pool.put(item);\r\n                for (let m: number = this._lastDisplayData.length - 1; m >= 0; m--) {\r\n                    if (this._lastDisplayData[m] == item._listId) {\r\n                        this._lastDisplayData.splice(m, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\r\n        } else {\r\n            while (this.content.children.length > this._numItems) {\r\n                this._delSingleItem(this.content.children[this.content.children.length - 1]);\r\n            }\r\n        }\r\n    }\r\n    //删除单个Item\r\n    _delSingleItem(item: any) {\r\n        // cc.log('DEL::', item['_listId'], item);\r\n        item.removeFromParent();\r\n        if (item.destroy)\r\n            item.destroy();\r\n        item = null;\r\n    }\r\n    /** \r\n     * 动效删除Item（此方法只适用于虚拟列表，即_virtual=true）\r\n     * 一定要在回调函数里重新设置新的numItems进行刷新，毕竟本List是靠数据驱动的。\r\n     */\r\n    aniDelItem(listId: number, callFunc: Function, aniType: number) {\r\n        let t: any = this;\r\n\r\n        if (!t.checkInited() || t.cyclic || !t._virtual)\r\n            return Log.error('This function is not allowed to be called!');\r\n\r\n        if (!callFunc)\r\n            return Log.error('CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!');\r\n\r\n        if (t._aniDelRuning)\r\n            return Log.warn('Please wait for the current deletion to finish!');\r\n\r\n        let item: any = t.getItemByListId(listId);\r\n        let listItem: ListItem;\r\n        if (!item) {\r\n            callFunc(listId);\r\n            return;\r\n        } else {\r\n            listItem = item.getComponent(ListItem);\r\n        }\r\n        t._aniDelRuning = true;\r\n        t._aniDelCB = callFunc;\r\n        t._aniDelItem = item;\r\n        t._aniDelBeforePos = item.position;\r\n        t._aniDelBeforeScale = item.scale;\r\n        let curLastId: number = t.displayData[t.displayData.length - 1].id;\r\n        let resetSelectedId: boolean = listItem.selected;\r\n        listItem.showAni(aniType, () => {\r\n            //判断有没有下一个，如果有的话，创建粗来\r\n            let newId: number;\r\n            if (curLastId < t._numItems - 2) {\r\n                newId = curLastId + 1;\r\n            }\r\n            if (newId != null) {\r\n                let newData: any = t._calcItemPos(newId);\r\n                t.displayData.push(newData);\r\n                if (t._virtual)\r\n                    t._createOrUpdateItem(newData);\r\n                else\r\n                    t._createOrUpdateItem2(newId);\r\n            } else\r\n                t._numItems--;\r\n            if (t.selectedMode == SelectedType.SINGLE) {\r\n                if (resetSelectedId) {\r\n                    t._selectedId = -1;\r\n                } else if (t._selectedId - 1 >= 0) {\r\n                    t._selectedId--;\r\n                }\r\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\r\n                let sub: number = t.multSelected.indexOf(listId);\r\n                if (sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                //多选的数据，在其后的全部减一\r\n                for (let n: number = t.multSelected.length - 1; n >= 0; n--) {\r\n                    let id: number = t.multSelected[n];\r\n                    if (id >= listId)\r\n                        t.multSelected[n]--;\r\n                }\r\n            }\r\n            if (t._customSize) {\r\n                if (t._customSize[listId])\r\n                    delete t._customSize[listId];\r\n                let newCustomSize: any = {};\r\n                let size: number;\r\n                for (let id in t._customSize) {\r\n                    size = t._customSize[id];\r\n                    let idNumber: number = parseInt(id);\r\n                    newCustomSize[idNumber - (idNumber >= listId ? 1 : 0)] = size;\r\n                }\r\n                t._customSize = newCustomSize;\r\n            }\r\n            //后面的Item向前怼的动效\r\n            let sec: number = .2333;\r\n            let twe: Tween<Node>, haveCB: boolean;\r\n            for (let n: number = newId != null ? newId : curLastId; n >= listId + 1; n--) {\r\n                item = t.getItemByListId(n);\r\n                if (item) {\r\n                    let posData: any = t._calcItemPos(n - 1);\r\n                    twe = tween(item)\r\n                        .to(sec, { position: new Vec3(posData.x, posData.y, 0) });\r\n\r\n                    if (n <= listId + 1) {\r\n                        haveCB = true;\r\n                        twe.call(() => {\r\n                            t._aniDelRuning = false;\r\n                            callFunc(listId);\r\n                            delete t._aniDelCB;\r\n                        });\r\n                    }\r\n                    twe.start();\r\n                }\r\n            }\r\n            if (!haveCB) {\r\n                t._aniDelRuning = false;\r\n                callFunc(listId);\r\n                t._aniDelCB = null;\r\n            }\r\n        }, true);\r\n    }\r\n    /**\r\n     * 滚动到..\r\n     * @param {Number} listId 索引（如果<0，则滚到首个Item位置，如果>=_numItems，则滚到最末Item位置）\r\n     * @param {Number} timeInSecond 时间\r\n     * @param {Number} offset 索引目标位置偏移，0-1\r\n     * @param {Boolean} overStress 滚动后是否强调该Item（这只是个实验功能）\r\n     */\r\n    scrollTo(listId: number, timeInSecond: number = .5, offset: number = null, overStress: boolean = false) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        // t._scrollView.stopAutoScroll();\r\n        if (timeInSecond == null)   //默认0.5\r\n            timeInSecond = .5;\r\n        else if (timeInSecond < 0)\r\n            timeInSecond = 0;\r\n        if (listId < 0)\r\n            listId = 0;\r\n        else if (listId >= t._numItems)\r\n            listId = t._numItems - 1;\r\n        // 以防设置了numItems之后layout的尺寸还未更新\r\n        if (!t._virtual && t._layout && t._layout.enabled)\r\n            t._layout.updateLayout();\r\n\r\n        let pos = t.getItemPos(listId);\r\n        if (!pos) {\r\n            return DEV && Log.error('pos is null', listId);\r\n        }\r\n        let targetX: number, targetY: number;\r\n\r\n        switch (t._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                targetX = pos.left;\r\n                if (offset != null)\r\n                    targetX -= t._thisNodeUt.width * offset;\r\n                else\r\n                    targetX -= t._leftGap;\r\n                pos = new Vec3(targetX, 0, 0);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                targetX = pos.right - t._thisNodeUt.width;\r\n                if (offset != null)\r\n                    targetX += t._thisNodeUt.width * offset;\r\n                else\r\n                    targetX += t._rightGap;\r\n                pos = new Vec3(targetX + t._contentUt.width, 0, 0);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                targetY = pos.top;\r\n                if (offset != null)\r\n                    targetY += t._thisNodeUt.height * offset;\r\n                else\r\n                    targetY += t._topGap;\r\n                pos = new Vec3(0, -targetY, 0);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                targetY = pos.bottom + t._thisNodeUt.height;\r\n                if (offset != null)\r\n                    targetY -= t._thisNodeUt.height * offset;\r\n                else\r\n                    targetY -= t._bottomGap;\r\n                pos = new Vec3(0, -targetY + t._contentUt.height, 0);\r\n                break;\r\n        }\r\n        let viewPos: any = t.content.getPosition();\r\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\r\n\r\n        let comparePos = t._sizeType ? pos.y : pos.x;\r\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\r\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\r\n\r\n        // t._scrollView.stopAutoScroll();\r\n        if (runScroll) {\r\n            t._scrollView.scrollToOffset(pos, timeInSecond);\r\n            t._scrollToListId = listId;\r\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\r\n            // cc.log(listId, t.content.width, t.content.getPosition(), pos);\r\n            t._scrollToSo = t.scheduleOnce(() => {\r\n                if (!t._adheringBarrier) {\r\n                    t.adhering = t._adheringBarrier = false;\r\n                }\r\n                t._scrollPos =\r\n                    t._scrollToListId =\r\n                    t._scrollToEndTime =\r\n                    t._scrollToSo =\r\n                    null;\r\n                //cc.log('2222222222', t._adheringBarrier)\r\n                if (overStress) {\r\n                    // t.scrollToListId = listId;\r\n                    let item = t.getItemByListId(listId);\r\n                    if (item) {\r\n                        tween(item)\r\n                            .to(.1, { scale: 1.05 })\r\n                            .to(.1, { scale: 1 })\r\n                            .start();\r\n                    }\r\n                }\r\n            }, timeInSecond + .1);\r\n\r\n            if (timeInSecond <= 0) {\r\n                t._onScrolling();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 计算当前滚动窗最近的Item\r\n     */\r\n    _calcNearestItem() {\r\n        let t: any = this;\r\n        t.nearestListId = null;\r\n        let data: any, center: number;\r\n\r\n        if (t._virtual)\r\n            t._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        vTop = t.viewTop;\r\n        vRight = t.viewRight;\r\n        vBottom = t.viewBottom;\r\n        vLeft = t.viewLeft;\r\n\r\n        let breakFor: boolean = false;\r\n        for (let n = 0; n < t.content.children.length && !breakFor; n += t._colLineNum) {\r\n            data = t._virtual ? t.displayData[n] : t._calcExistItemPos(n);\r\n            if (data) {\r\n                center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n                switch (t._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        if (data.right >= vLeft) {\r\n                            t.nearestListId = data.id;\r\n                            if (vLeft > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        if (data.left <= vRight) {\r\n                            t.nearestListId = data.id;\r\n                            if (vRight < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        if (data.bottom <= vTop) {\r\n                            t.nearestListId = data.id;\r\n                            if (vTop < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        if (data.top >= vBottom) {\r\n                            t.nearestListId = data.id;\r\n                            if (vBottom > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //判断最后一个Item。。。（哎，这些判断真心恶心，判断了前面的还要判断最后一个。。。一开始呢，就只有一个布局（单列布局），那时候代码才三百行，后来就想着完善啊，艹..这坑真深，现在这行数都一千五了= =||）\r\n        data = t._virtual ? t.displayData[t.displayItemNum - 1] : t._calcExistItemPos(t._numItems - 1);\r\n        if (data && data.id == t._numItems - 1) {\r\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (vRight > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (vLeft < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (vBottom < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (vTop > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n            }\r\n        }\r\n        // cc.log('t.nearestListId =', t.nearestListId);\r\n    }\r\n    //上一页\r\n    prePage(timeInSecond: number = .5) {\r\n        // cc.log('👈');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum - 1, timeInSecond);\r\n    }\r\n    //下一页\r\n    nextPage(timeInSecond: number = .5) {\r\n        // cc.log('👉');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum + 1, timeInSecond);\r\n    }\r\n    //跳转到第几页\r\n    skipPage(pageNum: number, timeInSecond: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t._slideMode != SlideType.PAGE)\r\n            return Log.error('This function is not allowed to be called, Must SlideMode = PAGE!');\r\n        if (pageNum < 0 || pageNum >= t._numItems)\r\n            return;\r\n        if (t.curPageNum == pageNum)\r\n            return;\r\n        // cc.log(pageNum);\r\n        t.curPageNum = pageNum;\r\n        if (t.pageChangeEvent) {\r\n            EventHandler.emitEvents([t.pageChangeEvent], pageNum);\r\n        }\r\n        t.scrollTo(pageNum, timeInSecond);\r\n    }\r\n    //计算 CustomSize（这个函数还是保留吧，某些罕见的情况的确还是需要手动计算customSize的）\r\n    calcCustomSize(numItems: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!t._itemTmp)\r\n            return Log.error('Unset template item!');\r\n        if (!t.renderEvent)\r\n            return Log.error('Unset Render-Event!');\r\n        t._customSize = {};\r\n        let temp: any = instantiate(t._itemTmp);\r\n        let ut: UITransform = temp.getComponent(UITransform);\r\n        t.content.addChild(temp);\r\n        for (let n: number = 0; n < numItems; n++) {\r\n            EventHandler.emitEvents([t.renderEvent], temp, n);\r\n            if (ut.height != t._itemSize.height || ut.width != t._itemSize.width) {\r\n                t._customSize[n] = t._sizeType ? ut.height : ut.width;\r\n            }\r\n        }\r\n        if (!Object.keys(t._customSize).length)\r\n            t._customSize = null;\r\n        temp.removeFromParent();\r\n        if (temp.destroy)\r\n            temp.destroy();\r\n        return t._customSize;\r\n    }\r\n}\r\n"]}